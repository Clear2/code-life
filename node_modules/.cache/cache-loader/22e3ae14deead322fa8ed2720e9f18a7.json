{"remainingRequest":"/Users/zjx/Documents/code-life/node_modules/babel-loader/lib/index.js??ref--4-1!/Users/zjx/Documents/code-life/node_modules/@docusaurus/theme-classic/src/theme/Navbar/index.js","dependencies":[{"path":"/Users/zjx/Documents/code-life/node_modules/@docusaurus/theme-classic/src/theme/Navbar/index.js","mtime":1585448178415},{"path":"/Users/zjx/Documents/code-life/node_modules/cache-loader/dist/cjs.js","mtime":1583413432579},{"path":"/Users/zjx/Documents/code-life/node_modules/babel-loader/lib/index.js","mtime":1585035384270}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}